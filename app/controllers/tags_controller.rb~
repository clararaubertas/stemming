class TagsController < ApplicationController

  def index
    if params[:kind] == 'users'
      @tags = User.tag_counts.sort { |x, y| x.name <=> y.name }
      @title = "browse users by tag in the community for women in science/tech/engineering/math"

    elsif params[:kind] == 'posts'
      @tags = Post.tag_counts.sort { |x, y| x.name <=> y.name }
      @title = "browse blog posts by tag in the community for women in science/tech/engineering/math"

    end
  end

  def redirect
    redirect_to :action => 'show', :obj_type => 'posts', :name => params[:link], :status => 301
  end
  
  def show
    @object_type = params[:obj_type].gsub(/s$/, '').titleize
    @tag = Tag.find_by_name_and_object_type(params[:name].downcase, @object_type)
    if @tag.nil?
      raise ActiveRecord::RecordNotFound
    end
    if @object_type == 'Post'
      @posts = Post.find_tagged_with(@tag).sort{ |a, b| b.published_at <=> a.published_at }.paginate(:per_page => 10, :page => params[:page])
      @tags = Post.tag_counts.find_all{ |t| t.count > 1 }.concat(Post.tag_counts.find_all{ |t| t.count == 1}.sort_by{ rand }.first(15)).sort{ |x, y| x.name <=> y.name } 
      @title = "#{@tag.name} :: the community for women in science/tech/engineering/math"
      @pagetitle = "posts tagged with #{@tag.name}"
      render "posts/index"
    elsif @object_type == 'User'
      @users = User.paged_find_tagged_with(@tag, :page => params[:page])
      @title = "#{@tag.name} :: the community for women in science/tech/engineering/math"
      @pagetitle = "users interested in #{@tag.name}"
      @newestusers = User.find(:all).sort{ |a, b| b.created_at <=> a.created_at }.first(4)
      @activeusers = User.find(:all).sort{ |a, b| b.activity_level <=> a.activity_level }.first(8)
#      User.send_later(:update_activity_levels)
      @mentors = Array.new
      while @mentors.size < 4 
        @mentoring = ["anthropology", "astronomy", "astrophysics", "biology", "computer science", "geology", "mathematics", "open-source software", "physics", "psychology", "programming"].sort_by{ rand }.first
        @mentors = User.has_tags(@mentoring).find_all{ |u| u.mentoring }.sort_by{ rand }.first(4)
      end

      render "users/index"
    end

  end


end
